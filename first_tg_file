import time
import requests

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, \
    ReplyKeyboardRemove
from aiogram.types.message import ContentType
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "6595611872:AAFL3JGvkF2aUe303vfOmIu4wTQ9HVVZr9U"  # Ð²Ð°Ñˆ Ñ‚Ð¾ÐºÐµÐ½

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

KB1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb1_1 = KeyboardButton("/help")
kb1_2 = KeyboardButton("/ðŸŒ ")
kb1_3 = KeyboardButton("/ðŸŒ¤")
kb1_4 = KeyboardButton("/pic")
KB1.add(kb1_1)
KB1.add(kb1_3).insert(kb1_2).insert(kb1_4)

KB3 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb3_1 = KeyboardButton("/go")
kb3_2 = KeyboardButton("/search")
KB3.add(kb3_1).add(kb3_2)

user_text = None


def gen_photo_url(word: str) -> str:
    return "https://yandex.ru/images/search?text=" + word


def gen_weather_outer(city):
    return "https://yandex.ru/weather/ru-RU/" + city + "/details"


def gen_googlephoto_url(cat):
    return "https://www.google.com/search?q=" + cat


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text="Ð°Ð»Ð¾",
                           parse_mode="html",
                           reply_markup=KB1)
    await message.delete()


@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text="ÐšÐ¾Ð¼Ð°Ð½Ð´Ñ‹:weather - Ð¿Ð¾ÐºÐ°Ð·Ð°Ñ‚ÑŒ Ð¿Ð¾Ð³Ð¾Ð´Ñƒ, pic - Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ñ‚ÑŒ ÐºÐ°Ñ€Ñ‚Ð¸Ð½ÐºÑƒ",
                           parse_mode="html",
                           reply_markup=KB1)
    await message.delete()


@dp.message_handler()
async def echo(message: types.Message):
    global user_text
    if message.text[0] != '/':
        user_text = message.text
    elif message.text == '/ðŸŒ ':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="Ð²Ñ‹ ÐµÑ‰Ðµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð²Ð²ÐµÐ»Ð¸")
        else:
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=gen_photo_url(user_text))
            await message.delete()
            user_text = None
    elif message.text == '/ðŸŒ¤':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="Ð²Ñ‹ ÐµÑ‰Ðµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð²Ð²ÐµÐ»Ð¸")
        else:
            await bot.send_message(chat_id=message.from_user.id,
                                   text=gen_weather_outer(user_text))
            await message.delete()
            user_text = None
    elif message.text == '/pic':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="Ð²Ñ‹ ÐµÑ‰Ðµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð²Ð²ÐµÐ»Ð¸")
        else:
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=gen_googlephoto_url(user_text))
            await message.delete()
            user_text = None


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
